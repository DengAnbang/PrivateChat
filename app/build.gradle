apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.hezeyi.privatechat"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.1.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
//            // 设置支持的SO库架构
//            abiFilters 'armeabi-v7a'//, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            abiFilters 'armeabi-v7a', 'x86'//, 'armeabi-v7a', 'x86_64', 'arm64-v8a'
//            abiFilters 'armeabi-v7a', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
        multiDexEnabled true
    }
    lintOptions {
        disable 'GoogleAppIndexingWarning'
        baseline file("lint-baseline.xml")
    }
    signingConfigs {
        release {
            storeFile file('PrivateChat.jks')
            storePassword '123456'
            keyAlias 'PrivateChat'
            keyPassword '123456'
            v2SigningEnabled true
        }
    }
    ext.releaseProguard = true
    ext.debugProguard = false
    buildTypes {
        release {
            minifyEnabled releaseProguard
            zipAlignEnabled releaseProguard
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            shrinkResources releaseProguard


        }
        debug {
            minifyEnabled debugProguard
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled debugProguard
            shrinkResources debugProguard
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android.applicationVariants.all { variant ->
        //判断是release还是debug版本
        def buildType = variant.buildType.name
        //获取渠道名称
        def channel = variant.productFlavors[0].name
        def fileName//获取当前时间的"YYYY-MM-dd"格式。
        def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
        variant.outputs.each {
            if (buildType == "release") {
                variant.getPackageApplicationProvider().get().outputDirectory = new File(project.rootDir.absolutePath + "/apk/V${defaultConfig.versionName}")
                def flavor = productFlavors[0]
                fileName = "${flavor.manifestPlaceholders["app_name"].toString()}_V${defaultConfig.versionName + "_" + createTime}.apk"
                it.outputFileName = fileName
            }
        }
    }
    flavorDimensions("channel")
    productFlavors {
        nb {
            applicationIdSuffix ".nb"
            dimension "channel"
            manifestPlaceholders = [app_name: "内部测试", CHANNEL: "nb", GD_KEY: "0fc6ecfaf02cb280ef11f881ca205e68"]
        }

    }


}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.1'
    implementation project(path: ':xhabutils')
//    rxjava
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    compile "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}
